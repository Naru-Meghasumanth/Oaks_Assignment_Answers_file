// Import Express.js Router
const express = require('express');
const router = express.Router();

// Import validation and hashing libraries (e.g., Joi, bcrypt)
const Joi = require('joi');
const bcrypt = require('bcrypt');

// Define validation schema for registration data
const registrationSchema = Joi.object({
  name: Joi.string().required(),
  email: Joi.string().email().required(),
  password: Joi.string().required(),
});

// Route handler for POST /register
router.post('/register', async (req, res) => {
  try {
    // Validate registration data
    const { error } = await registrationSchema.validateAsync(req.body);
    if (error) {
      return res.status(400).json({ message: error.details[0].message });
    }

    // Hash password
    const hashedPassword = await bcrypt.hash(req.body.password, 10);

    // Create new user (e.g., using a database model)
    // For demonstration purposes, we'll just store the data in a variable
    const user = {
      name: req.body.name,
      email: req.body.email,
      password: hashedPassword,
    };

    // Return success message
    res.json({ message: 'Registration successful' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
});

// Export the router
module.exports = router;
